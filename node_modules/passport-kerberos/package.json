{
  "name": "passport-kerberos",
  "version": "0.0.1",
  "description": "Kerberos 5 username and password authentication strategy for Passport.",
  "keywords": [
    "passport",
    "kerberos",
    "krb5",
    "auth",
    "authn",
    "authentication"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/joshuah/passport-kerberos.git"
  },
  "author": {
    "name": "Joshua Heiks",
    "email": "joshuaheiks@gmail.com"
  },
  "main": "./lib/passport-kerberos",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport": "~0.1.1",
    "node-krb5": "*"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "readme": "passport-kerberos\n=================\n\nKerberos authentication strategy for Passport.\n\n[Passport](http://passportjs.org/) strategy for authenticating with a username\nand password against a kerberos server.\n\nThis module lets you authenticate using a username and password in your Node.js\napplications.  By plugging into Passport, kerberos authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Installing the required headers on Ubuntu\n\n    sudo apt-get install libkrb5-dev\n\n## Install\n\n    $ npm install passport-kerberos\n\n## Usage\n\n#### Configure Strategy\n\nThe kerberos authentication strategy authenticates users using a username and\npassword.  The strategy requires a `verify` callback, which accepts these\ncredentials and calls `done` providing a user.\n\n    // The realm used for kerberos authentication.\n    var REALM=\"EXAMPLE.COM\"\n    \n    passport.use(new KerberosStrategy(\n      function(username, done) {\n        User.findOne({ username: username }, function (err, user) {\n          if (err) { return done(err); }\n          if (!user) { return done(null, false); }\n          return done(null, user, REALM);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'kerberos'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.post('/login', \n      passport.authenticate('kerberos', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\n(To be added.)\n\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\npassport-kerberos - Copyright (c) 2013 Joshua Heiks\nPassport-Local - Copyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/joshuah/passport-kerberos/issues"
  },
  "_id": "passport-kerberos@0.0.1",
  "dist": {
    "shasum": "184b3565898c9eb910c049d6255bd0b879bf4c9c",
    "tarball": "http://registry.npmjs.org/passport-kerberos/-/passport-kerberos-0.0.1.tgz"
  },
  "_from": "passport-kerberos@",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "solhive",
    "email": "joshuaheiks@gmail.com"
  },
  "maintainers": [
    {
      "name": "solhive",
      "email": "joshuaheiks@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "184b3565898c9eb910c049d6255bd0b879bf4c9c",
  "_resolved": "https://registry.npmjs.org/passport-kerberos/-/passport-kerberos-0.0.1.tgz"
}
